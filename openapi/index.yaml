openapi: 3.0.0
info:
  title: forager
  version: 1.0.0
  description: API for user operations

components:
  securitySchemes:
    tokenHeader:
      type: http
      scheme: basic
      description: authentication token in request
  schemas:
    UserRequest:
      type: object
      properties:
        username:
          type: string
          description: User's username
        password:
          type: string
          description: User's password
    RegisterUserRequest:
      $ref: "#/components/schemas/UserRequest"
    AuthenticateUserRequest:
      $ref: "#/components/schemas/UserRequest"
    TokenResponse:
      type: object
      properties:
        token:
          type: string
          description: authentication token

    FoodEstablishmentCreateRequestBody:
      type: object
      properties:
        sfa_license_no:
          type: string
          description: license number issued by authorities
        postal_code_official:
          type: string
          description: location by postal code
        business_name:
          type: string
          description: registered business name
    FoodEstablishment:
      type: object
      properties:
        sfa_license_no:
          type: string
          description: license number issued by authorities
        postal_code_official:
          type: string
          description: location by postal code
        business_name:
          type: string
          description: registered business name
    YoutubeReferenceCreateRequestBody:
      type: "object"
      properties:
        sfa_license_no:
          type: "string"
        video_id:
          type: "string"
        timestamp:
          type: "string"
    YoutubeReference:
      type: "object"
      properties:
        video_id:
          type: "string"
        food_establishment:
          type: object
          properties:
            sfa_license_no:
              type: "string"
        timestamp:
          type: "string"

paths:
  /api/auth/register:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserRequest"
      responses:
        "201":
          description: User created successfully
  /api/auth/authenticate:
    post:
      summary: Obtain token credentials given username and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticateUserRequest"
      responses:
        "200":
          description: Token obtained successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "401":
          description: Token not obtained. Credentials not matched.
  /api/establishment/:
    post:
      summary: Create a food establishment
      security:
        - tokenHeader: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FoodEstablishmentCreateRequestBody"
      responses:
        "201":
          description: Food establishment created successfully
  /api/establishment/all:
    post:
      summary: Get establishment
      security:
        - tokenHeader: [ ]
      responses:
        "200":
          description: Food establishment get all successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/FoodEstablishmentCreateRequestBody"
                  message:
                    type: string
  /api/reference/youtube/:
    post:
      summary: "POST reference/youtube/"
      operationId: "create"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/YoutubeReferenceCreateRequestBody"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/YoutubeReference"
  /api/reference/youtube/all:
    get:
      summary: "GET reference/youtube/all"
      operationId: "getAll"
      responses:
        "200":
          description: "OK"
          content:
            "application/json":
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/YoutubeReference"
                  message:
                    type: string
